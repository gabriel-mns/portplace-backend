trigger:
- feature-ahp-pipeline

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'portplacebackend'
  -group: portplace-vg

stages:
- stage: Build_and_Test
  displayName: 'Build and Test'
  jobs:
  - job: Build
    steps:
    
    - task: JavaToolInstaller@1
      inputs:
        versionSpec: '21'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: Maven@4
      inputs:
        azureSubscription: 'portplacebackend-connection'
        mavenPomFile: 'pom.xml'
        goals: 'clean verify package'
        options: '-X -B'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'Build com Maven'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.21'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
      env:
        DB_URL: $(dbUrl)
        DB_USERNAME: $(dbUsername)
        DB_PASSWORD: $(dbPassword)
        DRIVER_CLASS: $(driverClass)
        SECRET_KEY: $(secretKey)
        
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'Testes Maven'
      condition: succeededOrFailed()
      displayName: 'Publicar resultados dos testes'

- stage: Docker_Build_and_Push
  displayName: 'Docker Build and Push'
  dependsOn: Build_and_Test
  jobs:
  - job: Docker
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'portplacebackend-cr'
        repository: '$(IMAGE_NAME)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

    # - task: Docker@2
    #   inputs:
    #     command: 'buildAndPush'
    #     repository: '$(IMAGE_NAME)'
    #     dockerfile: '**/Dockerfile'
    #     containerRegistry: 'portplacebackend-cr'
    #     tags: |
    #       latest
    #       $(Build.BuildId)
      env:
        IMAGE_NAME: $(imageName)
